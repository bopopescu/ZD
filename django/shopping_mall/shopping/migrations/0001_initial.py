# Generated by Django 2.1.5 on 2019-02-24 16:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admins site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick', models.CharField(max_length=30, null=True, verbose_name='昵称')),
                ('ctime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('birthday', models.DateTimeField(null=True, verbose_name='生日')),
                ('tel', models.CharField(max_length=11, verbose_name='电话')),
                ('age', models.SmallIntegerField(null=True, verbose_name='年龄')),
                ('sex', models.SmallIntegerField(choices=[(0, '女'), (1, '男')], default=0, verbose_name='性别')),
                ('home_addr', models.CharField(max_length=255, verbose_name='住址')),
                ('account', models.CharField(max_length=20, verbose_name='账号')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Addr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='收件人')),
                ('site', models.CharField(max_length=150, null=True, verbose_name='详细地址')),
                ('Zip_Code', models.IntegerField(null=True, verbose_name='邮编')),
                ('tel', models.CharField(max_length=12, verbose_name='电话')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户编号')),
            ],
            options={
                'verbose_name': '收货地址',
                'verbose_name_plural': '收货地址',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名字')),
                ('img', models.ImageField(upload_to='img/', verbose_name='图片')),
                ('title', models.IntegerField(choices=[(0, '静态图片'), (1, '轮播图')], default=0, verbose_name='标题')),
                ('status', models.IntegerField(choices=[(0, '不启用'), (1, '启用')], default=1, verbose_name='是否启用')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='名称')),
                ('img1', models.ImageField(null=True, upload_to='img/', verbose_name='商品图片1')),
                ('seller', models.IntegerField(null=True, verbose_name='卖家编号')),
                ('goods_info', models.CharField(max_length=255, null=True, verbose_name='商品详情')),
                ('is_buy', models.IntegerField(default=1, verbose_name='是否上架')),
                ('zyxs', models.IntegerField(choices=[(0, 'NO'), (1, '主页显示')], default=1, verbose_name='主页显示')),
                ('tj', models.IntegerField(choices=[(0, 'NO'), (1, '推荐')], default=0, verbose_name='新品推荐')),
                ('price', models.FloatField(default=0, verbose_name='价格')),
                ('unit', models.CharField(default='500g', max_length=50, verbose_name='商品单位')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
            },
        ),
        migrations.CreateModel(
            name='Goods_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, null=True, verbose_name='名称')),
                ('img1', models.ImageField(null=True, upload_to='img/', verbose_name='图片1-图标')),
                ('note', models.CharField(max_length=255, null=True, verbose_name='说明')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('icon', models.CharField(max_length=20, null=True, verbose_name='图标')),
            ],
            options={
                'verbose_name': '商品分类',
                'verbose_name_plural': '商品分类',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='订单生成时间')),
                ('total1', models.FloatField(null=True, verbose_name='商品小计')),
                ('num1', models.IntegerField(null=True, verbose_name='商品数量')),
                ('order_status', models.IntegerField(choices=[(0, '未付款'), (1, '已付款')], default=1, verbose_name='订单状态')),
                ('status', models.IntegerField(choices=[(0, '去付款'), (1, '查看物流')], default=0, verbose_name='付款/查看')),
                ('goods', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shopping.Goods', verbose_name='商品编号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户编号')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='Pay_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='支付类型名称')),
                ('status', models.IntegerField(choices=[(0, 'NO'), (1, '启用')], default=1, verbose_name='是否启用')),
                ('img', models.CharField(max_length=50, verbose_name='支付平台图标')),
            ],
            options={
                'verbose_name': '支付平台',
                'verbose_name_plural': '支付平台',
            },
        ),
        migrations.CreateModel(
            name='Shop_cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(null=True, verbose_name='数量')),
                ('status', models.IntegerField(choices=[(0, 'NO'), (1, '启用')], default=1, verbose_name='是否启用')),
                ('is_del', models.IntegerField(choices=[(0, 'NO'), (1, '删除')], default=0, verbose_name='是否删除')),
                ('goods1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopping.Goods', verbose_name='商品编号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户编号')),
            ],
            options={
                'verbose_name': '购物车',
                'verbose_name_plural': '购物车',
            },
        ),
        migrations.AddField(
            model_name='goods',
            name='goods',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shopping.Goods_type', verbose_name='商品种类'),
        ),
        migrations.AddField(
            model_name='user',
            name='goods1',
            field=models.ManyToManyField(through='shopping.Shop_cart', to='shopping.Goods', verbose_name='商品'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
